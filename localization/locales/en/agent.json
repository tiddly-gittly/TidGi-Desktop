{
  "Add": "Add",
  "Agent": {
    "InvalidTabType": "",
    "LoadingChat": "",
    "StartConversation": "",
    "Untitled": ""
  },
  "Browser": {
    "Back": "Step back",
    "Bookmark": "Collection",
    "CurrentUrl": "Current URL",
    "EnterUrlPlaceholder": "Enter URL",
    "Forward": "forward",
    "Home": "Homepage",
    "Refresh": "refresh",
    "RenderPlaceholder": "This is the webpage rendering area."
  },
  "Chat": {
    "AiReplyPlaceholder": "I am processing your request...",
    "Cancel": "Cancel",
    "ChangeMetadata": "Change Metadata",
    "ConfigError": {
      "AuthenticationFailed": "Authentication failed for {{provider}}, please check your settings.",
      "GeneralError": "There's an issue with {{provider}} configuration, please check your settings.",
      "GoToSettings": "Go to Settings",
      "MissingAPIKey": "API key for {{provider}} is required to use this feature.",
      "MissingBaseURL": "Base URL for {{provider}} is required to use this feature.",
      "MissingProviderError": "Missing provider configuration, please check the settings.",
      "ModelNotFound": "Model not found for {{provider}}, please check your settings.",
      "ProviderNotFound": "Provider {{provider}} not found, please check your settings.",
      "RateLimitExceeded": "Rate limit exceeded for {{provider}}, please try again later.",
      "Title": "Configuration Issue"
    },
    "EmptyStateDescription": "Create a new session or select an existing one from the left to start chatting.",
    "Error": "Dialogue error",
    "InputPlaceholder": "Type a message, Ctrl+Enter to send",
    "Loading": "Dialogue loading",
    "NewSession": "New Session",
    "OpenInWorkspaceTiddler": "Open {{title}} in {{workspace}} workspace",
    "Send": "Send",
    "Session": "Session",
    "SessionGroup": {
      "Older": "Older",
      "Today": "Today",
      "Yesterday": "Yesterday"
    },
    "StartConversation": "Start a new conversation",
    "StartNewConversation": "Start a new conversation",
    "Thinking": "Thinking...",
    "TypePlaceholder": "Enter message...",
    "Typing": "Typing...",
    "Use": "Use",
    "WaitingForResponse": "Waiting for response..."
  },
  "Common": {
    "Apply": "",
    "Applying": "",
    "Save": "",
    "Saving": ""
  },
  "ContextMenu": {
    "AddToCurrentSplitView": "Add to current split view",
    "AddToSplitView": "Add to side-by-side view",
    "Close": "Close",
    "CloseAbove": "Close the tab above",
    "CloseBelow": "Close the tab below",
    "CloseOther": "Close other tabs",
    "CloseTabs": "Close multiple tabs",
    "ConvertToSplitView": "Convert to split view",
    "CreateSplitViewWithActive": "Create split view with active tab",
    "Duplicate": "copy",
    "NewTabBelow": "Open a new tab below",
    "Pin": "Pinned Tab",
    "Refresh": "refresh",
    "RestoreClosed": "Restore closed tab",
    "Unpin": "Unpin"
  },
  "ModelFeature": {
    "Embedding": "Embedding",
    "ImageGeneration": "Image Generation",
    "Language": "Language",
    "Reasoning": "Reasoning",
    "ToolCalling": "Tool Calling",
    "Vision": "Vision"
  },
  "ModelSelector": {
    "Model": "",
    "NoModelSelected": "",
    "SelectModel": "",
    "Title": ""
  },
  "NewTab": {
    "CodeTools": "code tool",
    "Explore": "explore",
    "Favorites": "Favorites",
    "NewChat": "New Conversation",
    "NewTab": "New Tab",
    "NewWebTab": "Create a new webpage",
    "QuickAccess": "quick access",
    "SearchPlaceholder": "Search for tabs or agents..."
  },
  "Preference": {
    "AIModelSelection": "AI Model Selection",
    "AIModelSelectionDescription": "Select the AI provider and model you want to use",
    "AITemperature": "Temperature Parameter",
    "AITemperatureDescription": "Lower values make responses more deterministic and consistent, while higher values make responses more diverse and creative",
    "APIKey": "API Key",
    "AddCustomModel": "Add Custom Model",
    "AddNewModel": "Add New Model",
    "AddNewProvider": "Add New Provider",
    "AddProvider": "Add Provider",
    "Anthropic": "Anthropic Official Interface",
    "BaseURL": "API Base URL",
    "BaseURLRequired": "API Base URL is required",
    "Cancel": "Cancel",
    "CancelAddProvider": "Cancel Adding",
    "ConfigureModelParameters": "configuration parameters",
    "ConfigureProvider": "Configure {{provider}}",
    "CreateCustomModel": "Create Custom Model",
    "Custom": "Custom Interface",
    "CustomProvider": "Custom Provider",
    "Deepseek": "DeepSeek Official Interface",
    "DefaultAIModelSelection": "Default AI Model Selection",
    "DefaultAIModelSelectionDescription": "Choose the default AI provider and model to use when not specifically set",
    "DisabledProviderInfo": "This provider is disabled, and its models will not appear in the model selection list",
    "EnableProvider": "Enable this provider",
    "ExternalAPI": "External API",
    "FailedToAddModel": "Failed to add model",
    "FailedToAddProvider": "Failed to add provider",
    "FailedToRemoveModel": "Failed to remove model",
    "FailedToSaveSettings": "Failed to save settings",
    "FailedToUpdateProviderConfig": "Failed to update provider configuration",
    "FailedToUpdateProviderStatus": "Failed to update provider status",
    "MaxTokens": "Maximum generation length",
    "MaxTokensDescription": "The maximum number of characters (measured in tokens) that the model can generate in a single request.",
    "ModelAddedSuccessfully": "Model added successfully",
    "ModelAlreadyExists": "Model already exists",
    "ModelCaption": "Model Display Name",
    "ModelCaptionHelp": "A friendly name to display in the interface; if left blank, the model name will be used",
    "ModelDetails": "Model Details",
    "ModelFeatures": "Model Features",
    "ModelName": "Model Name",
    "ModelNameRequired": "Model name is required",
    "ModelParameters": "model parameters",
    "ModelParametersDescription": "Configure the behavior parameters of generative AI models, such as temperature and token limits.",
    "ModelRemovedSuccessfully": "Model removed successfully",
    "Models": "Available Models",
    "NoPresetSelected": "No preset model selected",
    "NoProvidersAvailable": "No providers available",
    "Ollama": "Ollama Local Interface",
    "OpenAICompatible": "OpenAI-Compatible Interface",
    "Openai": "OpenAI Official Interface",
    "OrCreateCustom": "Or Create a Custom Model",
    "Preferences": "Preferences",
    "PresetBaseURL": "Preset API Base URL, cannot be modified",
    "PresetModels": "Preset Models",
    "PresetProvider": "Preset Provider",
    "ProviderAddedSuccessfully": "Provider added successfully",
    "ProviderAlreadyExists": "Provider name already exists",
    "ProviderClass": "Provider Interface Type",
    "ProviderConfigUpdated": "Provider configuration updated",
    "ProviderConfiguration": "Provider Configuration",
    "ProviderConfigurationDescription": "Configure the API key and other settings for AI providers",
    "ProviderDisabled": "Provider disabled",
    "ProviderEnabled": "Provider enabled",
    "ProviderName": "Provider Name",
    "ProviderNameRequired": "Provider name is required",
    "SaveProviderConfig": "Save Provider Configuration",
    "SelectDefaultProvider": "Select default provider",
    "SelectFromPresets": "Select from Preset Models",
    "SelectModel": "Select Model",
    "SelectProvider": "Select Provider",
    "SettingsSaved": "Settings saved",
    "SystemPrompt": "System Prompt",
    "SystemPromptDescription": "Set the system instructions sent to the AI to define its behavior and capabilities",
    "Temperature": "Temperature",
    "TemperatureDescription": "Lower values produce more deterministic and focused responses, while higher values yield more diverse and creative responses.",
    "TopP": "Top P",
    "TopPDescription": "Control the randomness of responses. Lower values make responses more deterministic, while higher values allow for greater variability."
  },
  "Prompt": {
    "AutoRefresh": "Preview auto-refreshes with input text changes",
    "AutoUpdate": "Auto",
    "AutoUpdatePreview": "Auto-update preview on form changes",
    "CodeEditor": "Code Editor",
    "Config": "Configuration",
    "ConfigurationDescription": "Edit prompt configuration",
    "EnterEditMode": "Enter Edit Mode",
    "EnterFullScreen": "Enter Fullscreen",
    "ExitEditMode": "Exit Edit Mode",
    "ExitFullScreen": "Exit Fullscreen",
    "Flat": "Flat View",
    "FormEditor": "Form Editor",
    "LastUpdated": "Last updated",
    "Loading": "Loading preview...",
    "NoConfigFound": "No configuration found",
    "NoHandlerFound": "No handler found",
    "NoMessages": "",
    "Preview": "Prompt Preview",
    "RefreshPreview": "Manually refresh preview",
    "SchemaNotProvided": "Schema Not Provided",
    "SchemaNotProvidedDescription": "No JSON schema was provided or could be fetched. Form cannot be rendered.",
    "ToggleFullScreen": "Toggle Fullscreen",
    "Tree": "Tree View"
  },
  "PromptConfig": {
    "AddItem": "",
    "EmptyArray": "",
    "ItemCount": "",
    "RemoveItem": "Remove item",
    "Tabs": {
      "PromptDynamicModification": "",
      "Prompts": "",
      "Response": "",
      "ResponseDynamicModification": ""
    },
    "Tags": {
      "HelperText": "",
      "NoOptions": "",
      "Placeholder": ""
    }
  },
  "Schema": {
    "AIConfig": {
      "Description": "AI Conversation Settings Configuration"
    },
    "AgentConfig": {
      "Description": "Agent Configuration",
      "Id": "Agent Unique Identifier",
      "PromptConfig": {
        "Description": "Prompt configuration",
        "PromptDynamicModification": "Dynamic Modification Configuration List for Prompt Words",
        "Prompts": "Prompt Configuration List",
        "Response": "Response Configuration List",
        "ResponseDynamicModification": "Dynamically modify the configuration list in response"
      }
    },
    "AutoReply": {
      "Description": "Auto-reply parameter configuration",
      "MaxAutoReply": "Maximum number of automatic replies",
      "TargetId": "Target element ID",
      "Text": "Reply text",
      "Trigger": "Trigger condition"
    },
    "AutoReroll": {
      "Description": "Automatically regenerate parameter configuration",
      "MaxRetry": "Maximum retry attempts",
      "Search": "search keywords",
      "TargetId": "Target element ID"
    },
    "BaseAPIConfig": {
      "API": "API providers and model configurations",
      "Description": "Basic API Configuration",
      "ModelParameters": "Model parameter configuration"
    },
    "DefaultAgents": {
      "Description": "Default Agent Configuration List"
    },
    "DynamicPosition": {
      "Description": "Dynamic Position Parameter Configuration"
    },
    "FullReplacement": {
      "Description": "Complete replacement of parameter configuration",
      "SourceType": "source type",
      "TargetId": "Target Element ID"
    },
    "Function": {
      "Description": "Function parameter configuration",
      "FunctionId": "Function ID",
      "TimeoutMessage": "timeout message",
      "TimeoutSecond": "Timeout (seconds)",
      "Trigger": "Trigger condition"
    },
    "JavascriptTool": {
      "Description": "JavaScript tool parameter configuration",
      "URI": "JavaScript Tool URI"
    },
    "MCP": {
      "Description": "Model Context Protocol Parameter Configuration",
      "Id": "MCP Server ID",
      "ResponseProcessing": {
        "Description": "Response Handling Configuration",
        "Id": "Response Handler ID"
      },
      "TimeoutMessage": "timeout message",
      "TimeoutSecond": "Timeout (seconds)",
      "Trigger": "Trigger condition"
    },
    "ModelParameters": {
      "Description": "Model parameter configuration",
      "MaxTokens": "Maximum number of tokens generated",
      "SystemPrompt": "Model system prompt words",
      "Temperature": "Response generation temperature (higher = more creative)",
      "TopP": "Top P sampling parameter"
    },
    "Position": {
      "Bottom": "Offset a few messages from the bottom",
      "Description": "Position Parameter Configuration",
      "TargetId": "target element ID",
      "Top": "Offset a few messages from the top",
      "Type": "Location Type"
    },
    "Prompt": {
      "Caption": "brief description",
      "Children": "The sub-prompt list will be concatenated from top to bottom, and from outer to inner, to form the final prompt text.",
      "Description": "Complete prompt configuration, including type and content",
      "Enabled": "Whether to enable this prompt, only enabled ones will be incorporated into the final prompt.",
      "Id": "The unique identifier for the prompt configuration, facilitating reference via targetId in PromptDynamicModification.",
      "Role": "Prompt role for OpenAI-compatible interface",
      "Tags": "Tag List",
      "Text": "The prompt content can include syntax supported by wiki text, such as <<variable name>>."
    },
    "PromptDynamicModification": {
      "Caption": "brief description",
      "Content": "content",
      "Description": "detailed description",
      "DynamicModificationType": "Dynamically modify types",
      "DynamicPositionParam": "Dynamic Position Parameters",
      "ForbidOverrides": "Is overwriting prohibited?",
      "FullReplacementParam": "completely replace parameters",
      "FunctionParam": "function parameters",
      "Id": "unique identifier",
      "JavascriptToolParam": "JavaScript tool parameters",
      "MCPParam": "Model Context Protocol Parameters",
      "RAGParam": "Retrieval-Augmented Generation Parameters",
      "SchemaDescription": "Dynamic Modification Configuration for Prompt Words"
    },
    "PromptPart": {
      "Caption": "A brief description of the prompt",
      "Children": "The list of sub-prompts will be concatenated from top to bottom and from outside to inside to form the final prompt text.",
      "Description": "Represents a part of the prompt, which can be text or a nested structure.",
      "Id": "Unique identifier, convenient for referencing via targetId in PromptDynamicModification.",
      "Tags": "Tag list, used for classification and referencing",
      "Text": "The prompt text content can include syntax supported by wiki text, such as <<variable name>>."
    },
    "ProviderModel": {
      "Description": "Provider and Model Configuration",
      "Model": "AI model name",
      "Provider": "AI provider name"
    },
    "RAG": {
      "Description": "Retrieval-Augmented Generation Parameter Configuration",
      "Removal": {
        "CoolDownChatRound": "Number of cooling rounds since last display",
        "Description": "Remove condition",
        "ExpireAfterChatRound": "After how many rounds of conversation does it expire"
      },
      "SourceType": "source type",
      "Trigger": "Trigger condition",
      "WikiParam": "Wiki parameters"
    },
    "Response": {
      "Description": "The response from an external API, typically used as the target for dynamic modifications in responses, shares the same structure as the prompt. It can be filled with preset content or serve as a placeholder or container, where ResponseDynamicModification injects the specific content from the external API's response."
    },
    "ResponseDynamicModification": {
      "AutoReplyParam": "auto-reply parameters",
      "AutoRerollParam": "Automatically regenerate parameters",
      "Caption": "brief description",
      "Description": "Dynamic Configuration Modification Response",
      "DynamicModificationType": "Dynamically modify types",
      "ForbidOverrides": "Is overwriting prohibited?",
      "FullReplacementParam": "completely replace parameters",
      "Id": "unique identifier",
      "ResponseProcessingType": "Response Processing Type",
      "ToolCallingParam": "Tool invocation parameters"
    },
    "ToolCalling": {
      "Description": "Tool Invocation Parameter Configuration",
      "Match": "match pattern",
      "TargetId": "target element ID"
    },
    "Trigger": {
      "Description": "Trigger Condition Configuration",
      "Filter": "Filter criteria",
      "Model": {
        "Description": "Trigger condition based on model judgment",
        "Preset": "preset model",
        "System": "System prompt",
        "User": "User prompt"
      },
      "RandomChance": "Random trigger probability",
      "Search": "search keywords"
    },
    "Wiki": {
      "Description": "Wiki parameter configuration",
      "Filter": "Filter expressions can utilize the filters supported by TiddlyWiki to extract data from the knowledge base.",
      "WorkspaceName": "Workspace name"
    }
  },
  "Search": {
    "AvailableAgents": "Available Agents",
    "FailedToCreateChatWithAgent": "Unable to create a conversation with the agent.",
    "FailedToFetchAgents": "Failed to retrieve the agent list",
    "NoAgentsFound": "Agent not found",
    "NoClosedTabsFound": "No recently closed tabs",
    "NoTabsFound": "No tabs found",
    "OpenTabs": "Open tabs",
    "RecentlyClosedTabs": "Recently closed tabs"
  },
  "SplitView": {
    "NoTabs": "No tabs in split-screen view",
    "RemoveFromSplitView": "Remove from split-screen view"
  },
  "Tab": {
    "Title": {
      "NewTab": "New Tab",
      "NewWeb": "Create a new webpage"
    }
  }
}
